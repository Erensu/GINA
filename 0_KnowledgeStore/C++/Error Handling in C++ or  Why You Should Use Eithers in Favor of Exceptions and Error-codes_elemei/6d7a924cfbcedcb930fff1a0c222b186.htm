<!DOCTYPE html>
<html><head><title>c-error-codes.c – Medium</title><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="twitter:widgets:csp" content="on"><meta name="robots" content="noindex"><!-- base href="https://hackernoon.com/media/6d7a924cfbcedcb930fff1a0c222b186?postId=f0640912eb45" --><style>body {text-rendering: optimizeLegibility; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; font-family: "ff-tisa-web-pro", Georgia, Cambria, "Times New Roman", Times, serif; font-weight: 400; color: #333332; font-size: 18px; line-height: 1.4; margin: 0; background-color: white; overflow: hidden;}iframe {max-width: 100%;}</style></head><body><style>.gist .gist-file { margin-bottom: 0 !important; }.gist { text-rendering: auto; }</style><script src="6d7a924cfbcedcb930fff1a0c222b186_data/c1604bfdca93674ddccccdf107a85866.js" charset="utf-8"></script><link rel="stylesheet" href="6d7a924cfbcedcb930fff1a0c222b186_data/gist-embed-6364c832764ba9bc85e4566bd747f0d1.css"><div id="gist47729512" class="gist">
    <div class="gist-file">
      <div class="gist-data">
        <div class="js-gist-file-update-container js-task-list-container file-box">
  <div id="file-c-error-codes-c" class="file">
    

  <div itemprop="text" class="blob-wrapper data type-c">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tbody><tr>
        <td id="file-c-error-codes-c-L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="file-c-error-codes-c-LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> <span class="pl-k">int</span> ERROR = <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="file-c-error-codes-c-LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> <span class="pl-k">int</span> SUCCESS = <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="file-c-error-codes-c-LC3" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="file-c-error-codes-c-LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">compute</span>(<span class="pl-k">int</span> input, <span class="pl-k">int</span>* output) {</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="file-c-error-codes-c-LC5" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-c1">cond</span>(input)) {</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="file-c-error-codes-c-LC6" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ERROR;</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="file-c-error-codes-c-LC7" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="file-c-error-codes-c-LC8" class="blob-code blob-code-inner js-file-line">    *output = <span class="pl-c1">computeOutput</span>(input);</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="file-c-error-codes-c-LC9" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> SUCCESS;</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="file-c-error-codes-c-LC10" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="file-c-error-codes-c-LC11" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="file-c-error-codes-c-LC12" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="file-c-error-codes-c-LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Usage</span></td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="file-c-error-codes-c-LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> output;</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="file-c-error-codes-c-LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> input;</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="file-c-error-codes-c-LC16" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="file-c-error-codes-c-LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (<span class="pl-k">int</span> error = compute(input, &amp;output)) {</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="file-c-error-codes-c-LC18" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">error_handler</span>(error);</td>
      </tr>
      <tr>
        <td id="file-c-error-codes-c-L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="file-c-error-codes-c-LC19" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
</tbody></table>


  </div>

  </div>
</div>

      </div>
      <div class="gist-meta">
        <a href="https://gist.github.com/njlr/c1604bfdca93674ddccccdf107a85866/raw/3b3cebb0f63e6a574c5d4044df99c867b3dfc921/c-error-codes.c" style="float:right">view raw</a>
        <a href="https://gist.github.com/njlr/c1604bfdca93674ddccccdf107a85866#file-c-error-codes-c">c-error-codes.c</a>
        hosted with ❤ by <a href="https://github.com/">GitHub</a>
      </div>
    </div>
</div>
<script>var height = -1; var delayMs = 200;function notifyResize(height) {height = height ? height : document.documentElement.offsetHeight; var resized = false; if (window.donkey && donkey.resize) {donkey.resize(height); resized = true;}if (parent && parent._resizeIframe) {var obj = {iframe: window.frameElement, height: height}; parent._resizeIframe(obj); resized = true;}if (window.location && window.location.hash === "#amp=1" && window.parent && window.parent.postMessage) {window.parent.postMessage({sentinel: "amp", type: "embed-size", height: height}, "*");}if (window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.resize) {window.webkit.messageHandlers.resize.postMessage(height); resized = true;}return resized;}function maybeResize() {if (document.documentElement.offsetHeight != height && notifyResize()) {height = document.documentElement.offsetHeight;}delayMs = Math.min(delayMs * 2, 1000000); setTimeout(maybeResize, delayMs);}maybeResize();</script></body></html>